import { AGICore } from "./ai/agi/core";
import { monitor } from "./ai/agi/monitor";
import { DistributedNode } from "./ai/agi/distributedNode";

export class Orchestrator {
  private core: AGICore;
  private distributedNode: DistributedNode;

  constructor() {
    this.core = new AGICore();
    this.distributedNode = new DistributedNode();
  }

  /**
   * Ekzekuton një input duke përdorur një qasje hibride dhe të avancuar.
   * @param input Hyrja për t'u përpunuar
   * @returns Një premtim me rezultatin e përpunimit
   */
  async execute(input: string): Promise<string> {
    monitor.log(`🎯 Orchestrator pranoi input: "${input}"`, "info");

    try {
      // Përpunim i avancuar i hyrjes
      const enrichedInput = this.enrichInput(input);
      monitor.log(`🔍 Hyrja e pasuruar: "${enrichedInput}"`, "debug");

      // Shpërndarje në një nyje të decentralizuar
      const distributedResult = await this.distributedNode.process(enrichedInput);
      monitor.log(`🌐 Rezultati nga nyja e decentralizuar: "${distributedResult}"`, "debug");

      // Ekzekutim i bërthamës AGI
      const coreOutput = await this.core.run(distributedResult);
      monitor.log(`✅ Përgjigje nga AGICore: "${coreOutput}"`, "info");

      // Përpunim i daljes për një qasje hibride
      const finalOutput = this.processOutput(coreOutput);
      monitor.log(`🔄 Dalja e përpunuar: "${finalOutput}"`, "debug");

      return finalOutput;
    } catch (error: any) {
      monitor.log(`❌ Gabim gjatë ekzekutimit: ${error.message}`, "error");
      return "Gabim gjatë përpunimit të komandës";
    }
  }

  /**
   * Pasuron hyrjen për të përfshirë kontekst të avancuar.
   * @param input Hyrja origjinale
   * @returns Hyrja e pasuruar
   */
  private enrichInput(input: string): string {
    // Shto logjikë për pasurimin e hyrjes (p.sh., metadata, kontekst)
    return `[Pasuruar]: ${input}`;
  }

  /**
   * Përpunon daljen për të përfshirë një qasje hibride.
   * @param output Dalja origjinale
   * @returns Dalja e përpunuar
   */
  private processOutput(output: string): string {
    // Shto logjikë për përpunimin e daljes (p.sh., formatim, transformim)
    return `[Hibride]: ${output}`;
  }
}

export const orchestrator = new Orchestrator();