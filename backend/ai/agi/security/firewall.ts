import { sendAlert } from "./alertSystem"; // PÃ«r tÃ« dÃ«rguar alarme nÃ« rast tÃ« kÃ«rcÃ«nimeve
import { logToDistributedSystem } from "./distributedLogger"; // PÃ«r ruajtje hibride tÃ« logjeve

type IPLog = {
  [ip: string]: {
    count: number;
    lastAccess: number;
    threatLevel: number; // Shtohet pÃ«r tÃ« monitoruar nivelin e kÃ«rcÃ«nimit
  };
};

const ipLog: IPLog = {};

// Funksioni kryesor i firewall-it
export function firewall(ip: string): boolean {
  const now = Date.now();

  if (!ipLog[ip]) {
    ipLog[ip] = { count: 1, lastAccess: now, threatLevel: 0 };
    return false;
  }

  const diff = now - ipLog[ip].lastAccess;
  ipLog[ip].lastAccess = now;

  // PÃ«rditÃ«so numrin e kÃ«rkesave dhe nivelin e kÃ«rcÃ«nimit
  if (diff < 2000) {
    ipLog[ip].count++;
    ipLog[ip].threatLevel += 1; // Rrit nivelin e kÃ«rcÃ«nimit pÃ«r sjellje tÃ« dyshimtÃ«
  } else {
    ipLog[ip].count = 1;
    ipLog[ip].threatLevel = Math.max(0, ipLog[ip].threatLevel - 1); // Ul nivelin e kÃ«rcÃ«nimit nÃ«se sjellja normalizohet
  }

  // Kontrollo nÃ«se IP duhet tÃ« bllokohet
  if (ipLog[ip].count > 5 || ipLog[ip].threatLevel > 10) {
    console.warn(`ğŸš¨ FIREWALL: IP ${ip} u bllokua pÃ«r shkak tÃ« sjelljes sÃ« dyshimtÃ«`);
    sendAlert(`IP ${ip} Ã«shtÃ« bllokuar pÃ«r shkak tÃ« kÃ«rcÃ«nimit tÃ« lartÃ«!`);
    logToDistributedSystem(ip, ipLog[ip]); // Ruaj logjet nÃ« njÃ« sistem tÃ« decentralizuar
    return true;
  }

  return false;
}
